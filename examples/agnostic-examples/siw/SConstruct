import os

debug = ARGUMENTS.get('debug', 0)

common_env = Environment()



include_paths = ['../../../include', '../../../interfaces/agnostic', '../../../interfaces/ff-wrapped',  '../../../external', '/usr/local/include' ]
lib_paths = [ '/opt/local/lib','../../..', '../../../interfaces/agnostic', '../../../interfaces/ff-wrapped', '../../../external/libff', '/usr/local/lib' ]
libs = ['Judy', 'aptk-ff-wrap', 'aptk-base', 'aptk',  'boost_program_options', 'ff']

common_env.Append( CPPPATH = [ os.path.abspath(p) for p in include_paths ] )

if int(debug) == 1 :
	common_env.Append( CCFLAGS = ['-g','-Wall', '-std=c++0x', '-DNDEBUG' ] )
else:
	common_env.Append( CCFLAGS = ['-O3','-Wall', '-std=c++0x', '-fpermissive' ,'-DNDEBUG'] )

cxx_sources = Glob('*.cxx')
c_sources = Glob('*.c')
src_objs = [ common_env.Object(s) for s in cxx_sources ] + [ common_env.Object(s) for s in c_sources ]



common_env.Append( LIBS=libs)
common_env.Append( LIBPATH=[ os.path.abspath(p) for p in lib_paths ] )

common_env.Program( 'siw', src_objs )
